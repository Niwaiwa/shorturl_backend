worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn; # main debug
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    # tcp_nopush          on;
    # tcp_nodelay         on;
    # underscores_in_headers on;
    # gzip  on;

    upstream backend {
        least_conn;
        server backend:8000 fail_timeout=0;
    }

    server {
        # if no Host match, close the connection to prevent host spoofing
        listen 80 default_server;
        return 444;
    }

    server {
        # path for static files
        # root /path/to/app/current/public;

        # use 'listen 80 deferred;' for Linux
        # use 'listen 80 accept_filter=httpready;' for FreeBSD
        listen 80;
        client_max_body_size 4G;
        # set the correct host(s) for your site
        server_name shorturl.com www.shorturl.com;
        charset utf-8;
        keepalive_timeout 60;

        # error_page 500 502 503 504 /500.html;
        # location = /500.html {
        #   root /path/to/app/current/public;
        # }

        # the web site resources path
        # location / {
        #     include uwsgi_params;
        #     # The inner address whilch point to Uwsgi. all the requests will resend to Uwsgo to resolve.
        #     # If we has configured the upstream options, we can fill in the upstream name instead.
        #     uwsgi_pass backend;
        #     uwsgi_param Host $host;
        #     uwsgi_param X-Real-IP $remote_addr;
        #     uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        # }

        location / {
            # checks for static file, if not found proxy to app
            try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://backend;
        }
    }
}
